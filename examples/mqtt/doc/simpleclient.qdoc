/****************************************************************************
**
** Copyright (C) 2017 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the QtMqtt module of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** BSD License Usage
** Alternatively, you may use this file under the terms of the BSD license
** as follows:
**
** "Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of The Qt Company Ltd nor the names of its
**     contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \example simpleclient
    \title Simple MQTT Client Example
    \ingroup qtmqtt-examples
    \brief Creating a minimalistic telemetry application.

    \image simpleclient.png

    \e {Simple MQTT Client} demonstrates how to create a minimalistic client
    application.

    To use the application, you first specify a broker, such as
    \e test.mosquitto.org or \e broker.hivemq.com and the port number 1883, and
    connect to it. You can then subscribe to a topic and send a message, which
    you will also receive.

    \note Port number 1883 is not encrypted, and therefore it is suitable only
    for development and testing purposes. In production, always use encrypted
    connections.

    \section1 Creating a Client

    First, we use the QMqttClient class to create an MQTT client. The class
    provides properties for setting a unique client ID as well as the broker
    host name and port to connect to:

    \quotefromfile simpleclient/mainwindow.cpp
    \skipto m_client
    \printuntil setPort

    We do not set the client ID, and therefore it will be automatically
    generated for us.

    Next, we connect to QMqttClient::messageReceived() to receive all messages
    sent to the broker:

    \skipto messageReceived
    \printuntil }

    When users subscribe to topics in the client, we call
    QMqttClient::subscribe() on the specified topic:

    \skipto on_buttonSubscribe_clicked
    \printuntil }

    In this example, we subscribe to all topics. For more information about
    how to receive messages on particular topics, see
    \l {MQTT Subscriptions Example}.

    For an example of how to use the QMqttClient class in a Qt Quick
    application, see \l {Quick MQTT Example}.
*/
