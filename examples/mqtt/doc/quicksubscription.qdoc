/****************************************************************************
**
** Copyright (C) 2017 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the QtMqtt module of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** BSD License Usage
** Alternatively, you may use this file under the terms of the BSD license
** as follows:
**
** "Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of The Qt Company Ltd nor the names of its
**     contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \example quicksubscription
    \title Quick MQTT Example
    \ingroup qtmqtt-examples
    \brief Registering QMqttClient to QML and using it in a Qt Quick user
    interface.

    \image quicksubscription.png

    \e {Quick MQTT} demonstrates how to register QMqttClient as a QML type and
    use it in a Qt Quick application.

    \l {Qt MQTT} does not provide a QML API in its current version. However,
    you can make the C++ classes of the module available to QML.

    \section1 Creating a Client

    We create a \c QmlMqttClient class with the QMqttClient class as a base
    class:

    \quotefromfile quicksubscription/qmlmqttclient.cpp
    \skipto QmlMqttClient(
    \printuntil }

    We use the \c subscribe() function to create a subscription object:

    \printuntil }

    We connect to QMqttSubscription::messageReceived( ) to receive all messages
    sent to the broker:

    \printuntil }

    We use an QMqttMessage object to store the payload of a received
    message:

    \skipto handleMessage
    \printuntil }

    \section1 Registering Classes in QML

    In the \c main.cpp file, we register the \c QmlMqttClient class as a
    QML type, MqttClient:

    \quotefromfile quicksubscription/main.cpp
    \skipto main(int
    \printuntil qmlRegisterType

    In addition, we register the \c QmlMqttSubscription class as an uncreatable
    type:

    \printuntil qmlRegisterUncreatableType

    We can now use the MqttClient type in the \c main.qml file to create an
    MQTT client:

    \quotefromfile quicksubscription/main.qml
    \skipto MqttClient {
    \printuntil }
*/
